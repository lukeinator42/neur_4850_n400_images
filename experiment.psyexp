<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.5">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001', 'one_match': 'True'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1512, 982]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="experiment" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="0" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <RoutineSettingsComponent name="trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.960" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="8.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_a" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.560" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_b" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.760" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="9.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="X        X          X&amp;#10;&amp;#10;&amp;#10;X        X          X&amp;#10;&amp;#10;&amp;#10;X        X          X" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'1','0'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.760" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="8" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="### BEGIN EXPERIMENT&amp;#10;&amp;#10;#Import Netstation library&amp;#10;from egi_pynetstation.NetStation import NetStation&amp;#10;&amp;#10;categories = {'musical_instrument':0, 'vehicle':1, 'four_footed_animal':2, 'fruit':3,&amp;#10;       'human_body':4, 'furniture':5, 'tool':6, 'clothing':7, 'kitchen_utensil':8,&amp;#10;       'bird':9}&amp;#10;&amp;#10;if expInfo['use_eeg']:&amp;#10;    #IP address of NetStation - CHANGE THIS TO MATCH THE IP ADDRESS OF YOUR NETSTATION&amp;#10;    IP_ns = '10.10.10.42'&amp;#10;&amp;#10;    #IP address of amplifier (if using 300&amp;#10;    #series, this is the same as the IP address of&amp;#10;    #NetStation. If using newer series, the amplifier&amp;#10;    #has its own IP address)&amp;#10;    IP_amp = '10.10.10.51'&amp;#10;&amp;#10;    #Port configured for ECI in NetStation - CHANGE THIS IF NEEDED&amp;#10;    port_ns = 55513&amp;#10;&amp;#10;    #Start recording and send trigger to show this&amp;#10;    eci_client = NetStation(IP_ns, port_ns)&amp;#10;    eci_client.connect(ntp_ip = IP_amp)&amp;#10;    eci_client.begin_rec()&amp;#10;    eci_client.send_event(event_type = 'STRT', start = 0.0)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {NetStation} from 'egi_pynetstation/NetStation';&amp;#10;categories = {&quot;musical_instrument&quot;: 0, &quot;vehicle&quot;: 1, &quot;four_footed_animal&quot;: 2, &quot;fruit&quot;: 3, &quot;human_body&quot;: 4, &quot;furniture&quot;: 5, &quot;tool&quot;: 6, &quot;clothing&quot;: 7, &quot;kitchen_utensil&quot;: 8, &quot;bird&quot;: 9};&amp;#10;if (expInfo[&quot;use_eeg&quot;]) {&amp;#10;    IP_ns = &quot;10.10.10.42&quot;;&amp;#10;    IP_amp = &quot;10.10.10.51&quot;;&amp;#10;    port_ns = 55513;&amp;#10;    eci_client = new NetStation(IP_ns, port_ns);&amp;#10;    eci_client.connect({&quot;ntp_ip&quot;: IP_amp});&amp;#10;    eci_client.begin_rec();&amp;#10;    eci_client.send_event({&quot;event_type&quot;: &quot;STRT&quot;, &quot;start&quot;: 0.0});&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="imageATriggerSent = false;&amp;#10;imageBTriggerSent = false;&amp;#10;respTriggerSent = false;&amp;#10;if (matching) {&amp;#10;    imageATrigger = (&quot;IAM&quot; + categories[&quot;category_a&quot;]);&amp;#10;    imageBTrigger = (&quot;IBM&quot; + categories[&quot;category_b&quot;]);&amp;#10;} else {&amp;#10;    imageATrigger = (&quot;IAD&quot; + categories[&quot;category_a&quot;]);&amp;#10;    imageBTrigger = (&quot;IBD&quot; + categories[&quot;category_b&quot;]);&amp;#10;}&amp;#10;console.log(imageATrigger);&amp;#10;console.log(imageBTrigger);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="### BEGIN ROUTINE&amp;#10;imageATriggerSent = False&amp;#10;imageBTriggerSent = False&amp;#10;respTriggerSent = False&amp;#10;&amp;#10;if matching:&amp;#10;    imageATrigger = 'IAM'+categories['category_a']&amp;#10;    imageBTrigger = 'IBM'+categories['category_b']&amp;#10;else:&amp;#10;    imageATrigger = 'IAD'+categories['category_a']&amp;#10;    imageBTrigger = 'IBD'+categories['category_b']&amp;#10;&amp;#10;print(imageATrigger)&amp;#10;print(imageBTrigger)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="### EACH FRAME&amp;#10;#Send trigger to NetStation - Change 'stim' to&amp;#10;#a meaningful trigger for your experiment OF NO MORE THAN FOUR CHARACTERS. You can&amp;#10;#also set the trigger in a conditions file.&amp;#10;&amp;#10;if expInfo['use_eeg'] and image.status == STARTED and not imageATriggerSent: #If the stimulus component has started and the trigger has not yet been sent. Change 'stimulus' to match the name of the component you want the trigger to be sent at the same time as&amp;#10;    win.callOnFlip(eci_client.send_event, event_type = imageATrigger, label=imageATrigger)&amp;#10;    imageATriggerSent = True #The trigger has now been sent, so we set this to true to avoid a trigger being sent on each frame&amp;#10;&amp;#10;if expInfo['use_eeg'] and image_2.status == STARTED and not imageBTriggerSent: #If the stimulus component has started and the trigger has not yet been sent. Change 'stimulus' to match the name of the component you want the trigger to be sent at the same time as&amp;#10;    win.callOnFlip(eci_client.send_event, event_type = imageBTrigger, label=imageBTrigger)&amp;#10;&amp;#10;    imageBTriggerSent = True #The trigger has now been sent, so we set this to true to avoid a trigger being sent on each frame" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((expInfo[&quot;use_eeg&quot;] &amp;&amp; (image.status === PsychoJS.Status.STARTED)) &amp;&amp; (! imageATriggerSent))) {&amp;#10;    psychoJS.window.callOnFlip(eci_client.send_event, {&quot;event_type&quot;: imageATrigger, &quot;label&quot;: imageATrigger});&amp;#10;    imageATriggerSent = true;&amp;#10;}&amp;#10;if (((expInfo[&quot;use_eeg&quot;] &amp;&amp; (image_2.status === PsychoJS.Status.STARTED)) &amp;&amp; (! imageBTriggerSent))) {&amp;#10;    psychoJS.window.callOnFlip(eci_client.send_event, {&quot;event_type&quot;: imageBTrigger, &quot;label&quot;: imageBTrigger});&amp;#10;    imageBTriggerSent = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="### END EXPERIMENT&amp;#10;if expInfo['use_eeg']:&amp;#10;    #Stop recording and disconnect&amp;#10;    eci_client.end_rec()&amp;#10;    eci_client.disconnect()&amp;#10;" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="if (expInfo[&quot;use_eeg&quot;]) {&amp;#10;    eci_client.end_rec();&amp;#10;    eci_client.disconnect();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (expInfo[&quot;use_eeg&quot;]) {&amp;#10;    if (_pj.in_es6(&quot;0&quot;, key_resp.keys)) {&amp;#10;        if (expInfo[&quot;one_match&quot;]) {&amp;#10;            respTrigStr = &quot;rsnm&quot;;&amp;#10;        } else {&amp;#10;            respTrigStr = &quot;rsmt&quot;;&amp;#10;        }&amp;#10;        psychoJS.window.callOnFlip(eci_client.send_event, {&quot;event_type&quot;: respTrigStr, &quot;label&quot;: respTrigStr});&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;1&quot;, key_resp.keys)) {&amp;#10;            if (expInfo[&quot;one_match&quot;]) {&amp;#10;                respTrigStr = &quot;rsmt&quot;;&amp;#10;            } else {&amp;#10;                respTrigStr = &quot;rsnm&quot;;&amp;#10;            }&amp;#10;            psychoJS.window.callOnFlip(eci_client.send_event, {&quot;event_type&quot;: respTrigStr, &quot;label&quot;: respTrigStr});&amp;#10;        }&amp;#10;    }&amp;#10;    eci_client.resync();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="### END ROUTINE&amp;#10;if expInfo[&quot;use_eeg&quot;]:&amp;#10;    if '0' in key_resp.keys:&amp;#10;        if expInfo['one_match']:&amp;#10;            respTrigStr = 'rsnm'&amp;#10;        else:&amp;#10;            respTrigStr = 'rsmt'&amp;#10;        win.callOnFlip(eci_client.send_event, event_type = respTrigStr, label=respTrigStr)&amp;#10;        &amp;#10;    elif '1' in key_resp.keys:&amp;#10;        if expInfo['one_match']:&amp;#10;            respTrigStr = 'rsmt'&amp;#10;        else:&amp;#10;            respTrigStr = 'rsnm'&amp;#10;        win.callOnFlip(eci_client.send_event, event_type = respTrigStr, label=respTrigStr)&amp;#10;        &amp;#10;    eci_client.resync();&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="fixation">
      <RoutineSettingsComponent name="fixation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="fixation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="8.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_5" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="7.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="X        X          X&amp;#10;&amp;#10;&amp;#10;X        X          X&amp;#10;&amp;#10;&amp;#10;X        X          X" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="practice_trial_2">
      <RoutineSettingsComponent name="practice_trial_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="practice_trial_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_6" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.960" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="8.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_a" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_7" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.560" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_b" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.760" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_8" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="9.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="X        X          X&amp;#10;&amp;#10;&amp;#10;X        X          X&amp;#10;&amp;#10;&amp;#10;X        X          X" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="'1','0'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.760" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="8" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="experiment_start">
      <RoutineSettingsComponent name="experiment_start" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="experiment_start" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_9" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The experiment will now start.&amp;#10;&amp;#10;Press any key when you are ready to begin. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions">
      <RoutineSettingsComponent name="instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_10" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;In this experiment you will respond after viewing a pair of images. Once you see the second image, press &quot; + ('0' if expInfo['one_match'] else &quot;1&quot;) +&quot; if the images did not match and &quot;+('1' if expInfo['one_match'] else '0') +&quot; if the images matched. Respond as quickly as possible.&quot;+&quot;\n\nWhen you see a grid of x's you can blink/move your eyes, but remain as still as possible and do not blink otherwise.&quot;+&quot;\n\nPress any key to start some practice trials.&quot;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="break_2">
      <RoutineSettingsComponent name="break_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="break_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_11" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You are now in a break!&amp;#10;&amp;#10;Press any key when you are ready to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((! ((trialsLoop.thisN % 20) === 0)) || (trialsLoop.thisN === 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if not ((trialsLoop.thisN%20)==0) or trialsLoop.thisN == 0:&amp;#10;    continueRoutine = False #end the routine" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instructions"/>
    <Routine name="fixation"/>
    <LoopInitiator loopType="TrialHandler" name="practice_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('image_a', 'stimuli/images/060 .bmp'), ('image_b', 'stimuli/images/079 .bmp'), ('name_a', 'Clock'), ('name_b', 'Dresser'), ('category_a', 'furniture'), ('category_b', 'furniture'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/083 .bmp'), ('image_b', 'stimuli/images/207 .bmp'), ('name_a', 'Ear'), ('name_b', 'Sled'), ('category_a', 'human_body'), ('category_b', 'vehicle'), ('matching', False)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli/practice_pairs.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="practice_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="practice_trial_2"/>
    <LoopTerminator name="practice_trials"/>
    <Routine name="experiment_start"/>
    <Routine name="fixation"/>
    <LoopInitiator loopType="TrialHandler" name="trialsLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('image_a', 'stimuli/images/190 .bmp'), ('image_b', 'stimuli/images/219 .bmp'), ('name_a', 'Rolling pin'), ('name_b', 'Stove'), ('category_a', 'kitchen_utensil'), ('category_b', 'kitchen_utensil'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/106 .bmp'), ('image_b', 'stimuli/images/250 .bmp'), ('name_a', 'Glove'), ('name_b', 'Watch'), ('category_a', 'clothing'), ('category_b', 'clothing'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/169 .bmp'), ('image_b', 'stimuli/images/191 .bmp'), ('name_a', 'Penguin'), ('name_b', 'Rooster'), ('category_a', 'bird'), ('category_b', 'bird'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/047 .bmp'), ('image_b', 'stimuli/images/147 .bmp'), ('name_a', 'Car'), ('name_b', 'Motorcycle'), ('category_a', 'vehicle'), ('category_b', 'vehicle'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/039 .bmp'), ('image_b', 'stimuli/images/240 .bmp'), ('name_a', 'Bus'), ('name_b', 'Train'), ('category_a', 'vehicle'), ('category_b', 'vehicle'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/046 .bmp'), ('image_b', 'stimuli/images/031 .bmp'), ('name_a', 'Cap'), ('name_b', 'Boot'), ('category_a', 'clothing'), ('category_b', 'clothing'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/196 .bmp'), ('image_b', 'stimuli/images/114 .bmp'), ('name_a', 'Saw'), ('name_b', 'Hammer'), ('category_a', 'tool'), ('category_b', 'tool'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/034 .bmp'), ('image_b', 'stimuli/images/097 .bmp'), ('name_a', 'Bowl'), ('name_b', 'Fork'), ('category_a', 'kitchen_utensil'), ('category_b', 'kitchen_utensil'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/185 .bmp'), ('image_b', 'stimuli/images/215 .bmp'), ('name_a', 'Refrigerator'), ('name_b', 'Spoon'), ('category_a', 'kitchen_utensil'), ('category_b', 'kitchen_utensil'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/179 .bmp'), ('image_b', 'stimuli/images/037 .bmp'), ('name_a', 'Pot'), ('name_b', 'Broom'), ('category_a', 'kitchen_utensil'), ('category_b', 'kitchen_utensil'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/203 .bmp'), ('image_b', 'stimuli/images/247 .bmp'), ('name_a', 'Shirt'), ('name_b', 'Vest'), ('category_a', 'clothing'), ('category_b', 'clothing'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/226 .bmp'), ('image_b', 'stimuli/images/067 .bmp'), ('name_a', 'Table'), ('name_b', 'Couch'), ('category_a', 'furniture'), ('category_b', 'furniture'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/083 .bmp'), ('image_b', 'stimuli/images/007 .bmp'), ('name_a', 'Ear'), ('name_b', 'Arm'), ('category_a', 'human_body'), ('category_b', 'human_body'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/101 .bmp'), ('image_b', 'stimuli/images/104 .bmp'), ('name_a', 'Frying pan'), ('name_b', 'Glass'), ('category_a', 'kitchen_utensil'), ('category_b', 'kitchen_utensil'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/141 .bmp'), ('image_b', 'stimuli/images/119 .bmp'), ('name_a', 'Lips'), ('name_b', 'Heart'), ('category_a', 'human_body'), ('category_b', 'human_body'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/070 .bmp'), ('image_b', 'stimuli/images/130 .bmp'), ('name_a', 'Cup'), ('name_b', 'Knife'), ('category_a', 'kitchen_utensil'), ('category_b', 'kitchen_utensil'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/092 .bmp'), ('image_b', 'stimuli/images/243 .bmp'), ('name_a', 'Flute'), ('name_b', 'Trumpet'), ('category_a', 'musical_instrument'), ('category_b', 'musical_instrument'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/224 .bmp'), ('image_b', 'stimuli/images/064 .bmp'), ('name_a', 'Sweater'), ('name_b', 'Coat'), ('category_a', 'clothing'), ('category_b', 'clothing'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/232 .bmp'), ('image_b', 'stimuli/images/118 .bmp'), ('name_a', 'Tie'), ('name_b', 'Hat'), ('category_a', 'clothing'), ('category_b', 'clothing'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/246 .bmp'), ('image_b', 'stimuli/images/188 .bmp'), ('name_a', 'Vase'), ('name_b', 'Rocking chair'), ('category_a', 'furniture'), ('category_b', 'furniture'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/149 .bmp'), ('image_b', 'stimuli/images/003 .bmp'), ('name_a', 'Mouse'), ('name_b', 'Alligator'), ('category_a', 'four_footed_animal'), ('category_b', 'four_footed_animal'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/132 .bmp'), ('image_b', 'stimuli/images/184 .bmp'), ('name_a', 'Lamp'), ('name_b', 'Record player'), ('category_a', 'furniture'), ('category_b', 'furniture'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/054 .bmp'), ('image_b', 'stimuli/images/220 .bmp'), ('name_a', 'Cherry'), ('name_b', 'Strawberry'), ('category_a', 'fruit'), ('category_b', 'fruit'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/127 .bmp'), ('image_b', 'stimuli/images/234 .bmp'), ('name_a', 'Kettle'), ('name_b', 'Toaster'), ('category_a', 'kitchen_utensil'), ('category_b', 'kitchen_utensil'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/002 .bmp'), ('image_b', 'stimuli/images/189 .bmp'), ('name_a', 'Airplane'), ('name_b', 'Roller skate'), ('category_a', 'vehicle'), ('category_b', 'vehicle'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/197 .bmp'), ('image_b', 'stimuli/images/151 .bmp'), ('name_a', 'Scissors'), ('name_b', 'Nail'), ('category_a', 'tool'), ('category_b', 'tool'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/164 .bmp'), ('image_b', 'stimuli/images/055 .bmp'), ('name_a', 'Peacock'), ('name_b', 'Chicken'), ('category_a', 'bird'), ('category_b', 'bird'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/155 .bmp'), ('image_b', 'stimuli/images/231 .bmp'), ('name_a', 'Nose'), ('name_b', 'Thumb'), ('category_a', 'human_body'), ('category_b', 'human_body'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/192 .bmp'), ('image_b', 'stimuli/images/176 .bmp'), ('name_a', 'Ruler'), ('name_b', 'Pliers'), ('category_a', 'tool'), ('category_b', 'tool'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/162 .bmp'), ('image_b', 'stimuli/images/029 .bmp'), ('name_a', 'Pants'), ('name_b', 'Blouse'), ('category_a', 'clothing'), ('category_b', 'clothing'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/086 .bmp'), ('image_b', 'stimuli/images/235 .bmp'), ('name_a', 'Eye'), ('name_b', 'Toe'), ('category_a', 'human_body'), ('category_b', 'human_body'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/111 .bmp'), ('image_b', 'stimuli/images/171 .bmp'), ('name_a', 'Guitar'), ('name_b', 'Piano'), ('category_a', 'musical_instrument'), ('category_b', 'musical_instrument'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/080 .bmp'), ('image_b', 'stimuli/images/117 .bmp'), ('name_a', 'Drum'), ('name_b', 'Harp'), ('category_a', 'musical_instrument'), ('category_b', 'musical_instrument'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/186 .bmp'), ('image_b', 'stimuli/images/126 .bmp'), ('name_a', 'Rhinoceros'), ('name_b', 'Kangaroo'), ('category_a', 'four_footed_animal'), ('category_b', 'four_footed_animal'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/078 .bmp'), ('image_b', 'stimuli/images/204 .bmp'), ('name_a', 'Dress'), ('name_b', 'Shoe'), ('category_a', 'clothing'), ('category_b', 'clothing'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/248 .bmp'), ('image_b', 'stimuli/images/001 .bmp'), ('name_a', 'Violin'), ('name_b', 'Accordion'), ('category_a', 'musical_instrument'), ('category_b', 'musical_instrument'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/113 .bmp'), ('image_b', 'stimuli/images/134 .bmp'), ('name_a', 'Hair'), ('name_b', 'Leg'), ('category_a', 'human_body'), ('category_b', 'human_body'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/173 .bmp'), ('image_b', 'stimuli/images/252 .bmp'), ('name_a', 'Pineapple'), ('name_b', 'Watermelon'), ('category_a', 'fruit'), ('category_b', 'fruit'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/010 .bmp'), ('image_b', 'stimuli/images/072 .bmp'), ('name_a', 'Ashtray'), ('name_b', 'Desk'), ('category_a', 'furniture'), ('category_b', 'furniture'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/120 .bmp'), ('image_b', 'stimuli/images/249 .bmp'), ('name_a', 'Helicopter'), ('name_b', 'Wagon'), ('category_a', 'vehicle'), ('category_b', 'vehicle'), ('matching', True)]), OrderedDict([('image_a', 'stimuli/images/106 .bmp'), ('image_b', 'stimuli/images/197 .bmp'), ('name_a', 'Glove'), ('name_b', 'Scissors'), ('category_a', 'clothing'), ('category_b', 'tool'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/243 .bmp'), ('image_b', 'stimuli/images/176 .bmp'), ('name_a', 'Trumpet'), ('name_b', 'Pliers'), ('category_a', 'musical_instrument'), ('category_b', 'tool'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/125 .bmp'), ('image_b', 'stimuli/images/094 .bmp'), ('name_a', 'Jacket'), ('name_b', 'Foot'), ('category_a', 'clothing'), ('category_b', 'human_body'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/231 .bmp'), ('image_b', 'stimuli/images/185 .bmp'), ('name_a', 'Thumb'), ('name_b', 'Refrigerator'), ('category_a', 'human_body'), ('category_b', 'kitchen_utensil'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/053 .bmp'), ('image_b', 'stimuli/images/140 .bmp'), ('name_a', 'Chair'), ('name_b', 'Lion'), ('category_a', 'furniture'), ('category_b', 'four_footed_animal'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/242 .bmp'), ('image_b', 'stimuli/images/234 .bmp'), ('name_a', 'Truck'), ('name_b', 'Toaster'), ('category_a', 'vehicle'), ('category_b', 'kitchen_utensil'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/120 .bmp'), ('image_b', 'stimuli/images/101 .bmp'), ('name_a', 'Helicopter'), ('name_b', 'Frying pan'), ('category_a', 'vehicle'), ('category_b', 'kitchen_utensil'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/064 .bmp'), ('image_b', 'stimuli/images/164 .bmp'), ('name_a', 'Coat'), ('name_b', 'Peacock'), ('category_a', 'clothing'), ('category_b', 'bird'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/162 .bmp'), ('image_b', 'stimuli/images/160 .bmp'), ('name_a', 'Pants'), ('name_b', 'Owl'), ('category_a', 'clothing'), ('category_b', 'bird'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/016 .bmp'), ('image_b', 'stimuli/images/114 .bmp'), ('name_a', 'Banana'), ('name_b', 'Hammer'), ('category_a', 'fruit'), ('category_b', 'tool'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/002 .bmp'), ('image_b', 'stimuli/images/010 .bmp'), ('name_a', 'Airplane'), ('name_b', 'Ashtray'), ('category_a', 'vehicle'), ('category_b', 'furniture'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/006 .bmp'), ('image_b', 'stimuli/images/191 .bmp'), ('name_a', 'Apple'), ('name_b', 'Rooster'), ('category_a', 'fruit'), ('category_b', 'bird'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/188 .bmp'), ('image_b', 'stimuli/images/127 .bmp'), ('name_a', 'Rocking chair'), ('name_b', 'Kettle'), ('category_a', 'furniture'), ('category_b', 'kitchen_utensil'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/159 .bmp'), ('image_b', 'stimuli/images/080 .bmp'), ('name_a', 'Ostrich'), ('name_b', 'Drum'), ('category_a', 'bird'), ('category_b', 'musical_instrument'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/218 .bmp'), ('image_b', 'stimuli/images/196 .bmp'), ('name_a', 'Stool'), ('name_b', 'Saw'), ('category_a', 'furniture'), ('category_b', 'tool'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/205 .bmp'), ('image_b', 'stimuli/images/088 .bmp'), ('name_a', 'Skirt'), ('name_b', 'Finger'), ('category_a', 'clothing'), ('category_b', 'human_body'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/215 .bmp'), ('image_b', 'stimuli/images/099 .bmp'), ('name_a', 'Spoon'), ('name_b', 'French horn'), ('category_a', 'kitchen_utensil'), ('category_b', 'musical_instrument'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/135 .bmp'), ('image_b', 'stimuli/images/055 .bmp'), ('name_a', 'Lemon'), ('name_b', 'Chicken'), ('category_a', 'fruit'), ('category_b', 'bird'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/226 .bmp'), ('image_b', 'stimuli/images/086 .bmp'), ('name_a', 'Table'), ('name_b', 'Eye'), ('category_a', 'kitchen_utensil'), ('category_b', 'human_body'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/158 .bmp'), ('image_b', 'stimuli/images/172 .bmp'), ('name_a', 'Orange'), ('name_b', 'Pig'), ('category_a', 'fruit'), ('category_b', 'four_footed_animal'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/037 .bmp'), ('image_b', 'stimuli/images/216 .bmp'), ('name_a', 'Broom'), ('name_b', 'Squirrel'), ('category_a', 'kitchen_utensil'), ('category_b', 'four_footed_animal'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/060 .bmp'), ('image_b', 'stimuli/images/115 .bmp'), ('name_a', 'Clock'), ('name_b', 'Hand'), ('category_a', 'furniture'), ('category_b', 'human_body'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/252 .bmp'), ('image_b', 'stimuli/images/119 .bmp'), ('name_a', 'Watermelon'), ('name_b', 'Heart'), ('category_a', 'fruit'), ('category_b', 'human_body'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/078 .bmp'), ('image_b', 'stimuli/images/081 .bmp'), ('name_a', 'Dress'), ('name_b', 'Duck'), ('category_a', 'clothing'), ('category_b', 'bird'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/134 .bmp'), ('image_b', 'stimuli/images/056 .bmp'), ('name_a', 'Leg'), ('name_b', 'Chisel'), ('category_a', 'human_body'), ('category_b', 'tool'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/228 .bmp'), ('image_b', 'stimuli/images/220 .bmp'), ('name_a', 'Television'), ('name_b', 'Strawberry'), ('category_a', 'furniture'), ('category_b', 'fruit'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/027 .bmp'), ('image_b', 'stimuli/images/235 .bmp'), ('name_a', 'Bicycle'), ('name_b', 'Toe'), ('category_a', 'vehicle'), ('category_b', 'human_body'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/007 .bmp'), ('image_b', 'stimuli/images/198 .bmp'), ('name_a', 'Arm'), ('name_b', 'Screw'), ('category_a', 'human_body'), ('category_b', 'tool'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/075 .bmp'), ('image_b', 'stimuli/images/070 .bmp'), ('name_a', 'Donkey'), ('name_b', 'Cup'), ('category_a', 'four_footed_animal'), ('category_b', 'kitchen_utensil'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/250 .bmp'), ('image_b', 'stimuli/images/147 .bmp'), ('name_a', 'Watch'), ('name_b', 'Motorcycle'), ('category_a', 'clothing'), ('category_b', 'vehicle'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/049 .bmp'), ('image_b', 'stimuli/images/179 .bmp'), ('name_a', 'Cat'), ('name_b', 'Pot'), ('category_a', 'four_footed_animal'), ('category_b', 'kitchen_utensil'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/012 .bmp'), ('image_b', 'stimuli/images/022 .bmp'), ('name_a', 'Axe'), ('name_b', 'Bed'), ('category_a', 'tool'), ('category_b', 'furniture'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/031 .bmp'), ('image_b', 'stimuli/images/155 .bmp'), ('name_a', 'Boot'), ('name_b', 'Nose'), ('category_a', 'clothing'), ('category_b', 'human_body'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/047 .bmp'), ('image_b', 'stimuli/images/118 .bmp'), ('name_a', 'Car'), ('name_b', 'Hat'), ('category_a', 'vehicle'), ('category_b', 'clothing'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/192 .bmp'), ('image_b', 'stimuli/images/169 .bmp'), ('name_a', 'Ruler'), ('name_b', 'Penguin'), ('category_a', 'tool'), ('category_b', 'bird'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/224 .bmp'), ('image_b', 'stimuli/images/166 .bmp'), ('name_a', 'Sweater'), ('name_b', 'Pear'), ('category_a', 'clothing'), ('category_b', 'fruit'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/246 .bmp'), ('image_b', 'stimuli/images/054 .bmp'), ('name_a', 'Vase'), ('name_b', 'Cherry'), ('category_a', 'furniture'), ('category_b', 'fruit'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/145 .bmp'), ('image_b', 'stimuli/images/130 .bmp'), ('name_a', 'Monkey'), ('name_b', 'Knife'), ('category_a', 'four_footed_animal'), ('category_b', 'kitchen_utensil'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/190 .bmp'), ('image_b', 'stimuli/images/072 .bmp'), ('name_a', 'Rolling pin'), ('name_b', 'Desk'), ('category_a', 'kitchen_utensil'), ('category_b', 'furniture'), ('matching', False)]), OrderedDict([('image_a', 'stimuli/images/067 .bmp'), ('image_b', 'stimuli/images/131 .bmp'), ('name_a', 'Couch'), ('name_b', 'Ladder'), ('category_a', 'furniture'), ('category_b', 'tool'), ('matching', False)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli/pairs.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trialsLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="break_2"/>
    <LoopTerminator name="trialsLoop"/>
  </Flow>
</PsychoPy2experiment>
